# Usage: 
#   export GCP_KEY_PATH=~/keys/project-key.json 
#   docker-compose -f docker-compose.yml -f docker-compose.access.yml
version: "3.9"
   
services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-}
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      ELASTIC_SEARCH_HOST: ${ELASTIC_SEARCH_HOST:-}
    networks:
        - elk
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "80:8000"
    environment:
      POSTGRES_NAME: ${POSTGRES_DB:-}
      POSTGRES_USER: ${POSTGRES_USER:-}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-}
      ELASTIC_SEARCH_HOST: ${ELASTIC_SEARCH_HOST:-}
      ELASTIC_SEARCH_PORT: ${ELASTIC_SEARCH_PORT:-}
      ELASTIC_SEARCH_USER: ${ELASTIC_SEARCH_USER:-}
      ELASTIC_SEARCH_PASS: ${ELASTIC_SEARCH_PASS:-}
    depends_on:
      - db
    networks:
      - elk
  elasticsearch:
    build:
      context: elasticsearch_docker/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elasticsearch_docker/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch_docker:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx256m -Xms256m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_SEARCH_PASS:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

networks:
  elk:
    driver: bridge
volumes:
  elasticsearch_docker: